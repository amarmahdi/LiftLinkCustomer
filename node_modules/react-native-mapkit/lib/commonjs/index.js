"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _reactNative = require("react-native");
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
const Mapkit = (0, _reactNative.requireNativeComponent)('RNMapkit');
class MapView extends _react.default.Component {
  constructor(props) {
    super(props);
  }
  getProps() {
    return {
      ...this.props
    };
  }
  render() {
    return /*#__PURE__*/_react.default.createElement(Mapkit, this.getProps());
  }
}
exports.default = MapView;
_defineProperty(MapView, "defaultProps", {});
//# sourceMappingURL=index.js.map